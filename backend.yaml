- name: backend
  hosts: backend
  become: yes
  vars:
  mysql_password: ExpenseApp@1
  tasks:
    - name: Disable old Node.js and enable Node.js:18
      ansible.builtin.shell: "dnf module disable nodejs -y ; dnf module enable nodejs:20 -y"

    - name: Install Node.js
      ansible.builtin.package:
        name: nodejs
        state: present

    - name: Create expenses user
      ansible.builtin.user:
        name: expense

    - name: Recursively remove app directory
      ansible.builtin.file:
        path: /app
        state: absent

    - name: Create app directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: Download backend application
      ansible.builtin.get_url:
        url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
        dest: /tmp

    - name: Extract expense-backend application
      ansible.builtin.unarchive:
        src: /tmp/expense-backend-v2.zip
        dest: /app
        remote_src: yes

    - name: Install npm
      ansible.builtin.command: npm install
      args:
        chdir: /app

    - name: Copy backend.service
      ansible.builtin.copy:
        src: backend.service
        dest: /etc/systemd/system/backend.service

    - name: System daemon reload and start
      ansible.builtin.systemd_service:
        daemon_reload: yes

    - name: Install mysql
      ansible.builtin.package:
        name: mysql
        state: present

  - name: load schema
    ansible.builtin.shell: "mysql -h mysql.prudhvi.online -uroot -p{{mysql_password}} < /app/schema/shipping.sql"
    when: schema.stdout != "1"


  - name: Start and enable shipping
    ansible.builtin.service:
      name: shipping
      state: restarted
      enabled: yes